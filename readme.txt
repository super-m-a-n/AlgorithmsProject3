/* readme.txt */

==========================================
(α) ΣΤΟΙΧΕΙΑ ΦΟΙΤΗΤΩΝ
==========================================

ΚΩΝΣΤΑΝΤΙΝΟΣ ΤΣΙΚΟΥΡΗΣ | ΑΜ : 1115201800201
ΒΑΣΙΛΕΙΟΣ ΒΑΣΙΛΑΚΗΣ    | ΑΜ : 1115201800018

==========================================
(β) ΤΙΤΛΟΣ ΚΑΙ ΠΕΡΙΓΡΑΦΗ ΠΡΟΓΡΑΜΜΑΤΟΣ
==========================================

Πρόγνωση τιμών μετοχών με χρήση αναδρομικού νευρωνικού δικτύου LSTM.
Ανίχνευση ανωμαλιών με χρήση autoencoding LSTM νευρωνικού δικτύου.
Convolutional autoencoder για απλούστευση αναπαράστασης των χρονοσειρών.
Αναζήτηση και συσταδοποίηση χρονοσειρών βάσει της νέας απλουστευμένης αναπαράστασης,
και σύγκριση με αποτελέσματα πριν την απλοποίηση, χρησιμοποιώντας αλγόριθμους 
αναζήτησης και συσταδοποίησης προηγούμενης εργασίας.

==========================================
(γ) ΚΑΤΑΛΟΓΟΣ ΚΑΙ ΠΕΡΙΓΡΑΦΗ ΑΡΧΕΙΩΝ
==========================================

- forecast.py : 
	Η main για το (Α), για την πρόγνωση τιμών μετοχών με χρήση LSTM

- forecast_utils.py : 
	Βοηθητικές συναρτήσεις για την forecast.py, που ορίζουν το LSTM μοντέλο, 
	διασπούν το dataset σε training/validation set, που εκτελούν το training τόσο ανά
	χρονοσειρά , όσο και στο σύνολο, και που τυπώνουν τις γραφικές παραστάσεις των αποτελεσμάτων.

- forecast.ipynb : Η λειτουργικότητα των παραπάνω 2 αρχείων, σε notebook του colab

- detect.py :
	Η main για το (Β), για την ανίχνευση ανωμαλιών με χρήση LSTM autoencoder

- detect_utils.py : 
	Βοηθητικές συναρτήσεις για την detect.py, που ορίζουν το LSTM autoencoder μοντέλο, 
	διασπούν το dataset σε training/validation set, που εκτελούν το training στο σύνολο, 
	και που τυπώνουν τις γραφικές παραστάσεις των αποτελεσμάτων.

- detect.ipynb : H λειτουργικότητα των παραπάνω 2 αρχείων, σε notebook του colab

____________________________________________________________________________________________________________________________________________

ΣΤΟΝ ΦΑΚΕΛΟ content :
	ΣΤΟΝ ΥΠΟΦΑΚΕΛΟ data: υπάρχει το αρχείο δεδομένων nasdaq2007_17.csv

	ΣΤΟΝ ΥΠΟΦΑΚΕΛΟ models: υπάρχουν τα pre-trained μοντέλα για τα (Α),(Β),(Γ)
		
		ΣΤΟΝ ΥΠΟΦΑΚΕΛΟ forecast : υπάρχουν τα pre-trained μοντέλα για το (Α)
		
		ΣΤΟΝ ΥΠΟΦΑΚΕΛΟ detect : υπάρχει το pre-trained μοντέλο για το (B)
		
		ΣΤΟΝ ΥΠΟΦΑΚΕΛΟ reduce : υπάρχει το pre-trained μοντέλο για το (Γ)

____________________________________________________________________________________________________________________________________________

=======================================
(δ) ΟΔΗΓΙΕΣ ΕΚΤΕΛΕΣΗΣ
=======================================

- Εντολή εκτέλεσης για το (Α) : python forecast.py –d <dataset> -n <number of time series selected> 
- Εντολή εκτέλεσης για το (Β) : python detect.py –d <dataset> -n <number of time series selected> -mae <error value as double>

για τα (Α), (Β) default συμπεριφορά είναι να χρησιμοποιούν pre-trained μοντέλα.  Για εκπαίδευση, δίνεται μια επιπλέον προαιρετική παράμετρος -train.

- Εντολή εκτέλεση για το (Γ) : python reduce.py –d <dataset> -q <queryset> -od <output_dataset_file> -oq <output_query_file> 

============================================================================
(ε) ΟΔΗΓΙΕΣ ΧΡΗΣΗΣ / ΣΧΕΔΙΑΣΤΙΚΕΣ ΕΠΙΛΟΓΕΣ-ΠΑΡΑΔΟΧΕΣ / ΕΠΙΛΟΓΕΣ ΠΑΡΑΜΕΤΡΩΝ 
============================================================================

- Για τα (Α), (Β) το -n ουσιαστικά είναι για πόσες χρονοσειρές από την αρχή να γίνουν predictions/anomaly detections

- Για το (Α), λόγω χρόνου τα pre-trained μοντέλα είναι μόνο για τις πρώτες 20 χρονοσειρές, δηλαδή έχουμε ένα μοντέλο ανα χρονοσειρά
  για κάθε μια εκ των πρώτων 20  χρονοσειρών, και ένα μοντέλο εκπαιδευμένο στο σύνολο των πρώτων 20 χρονοσειρών. 
  Άρα, και το -n θα πρέπει να είναι μέχρι και 20 για το (Α).

- Για το (Β), δεν υπάρχει περιορισμός στο -n, αφού το autoencoder μοντέλο είναι εκπαιδευμένο πάνω σε ολόκληρο το σύνολο.

- Για το (Β), καλές τιμές του mean absolute error threshold είναι γύρω στο 0.65.

-Για ΕΠΙΛΟΓΕΣ ΠΑΡΑΜΕΤΡΩΝ - ΠΕΙΡΑΜΑΤΑ - ΠΑΡΑΤΗΡΗΣΕΙΣ ΒΛΕΠΕ το report
